// The MIT License (MIT)

// Copyright (c) Mikko Tapionlinna

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

var VERSION = "1.0.0";

var _getCurrentArtboard = function(context) {
  var targetArtboard;
  var doc = context.document;

  var selectedElements = context.selection;
  if([selectedElements count] != 0) {
    targetArtboard = selectedElements[0];
    log("Artboard selected");
  } else {
    targetArtboard = [[[doc currentPage] artboards] firstObject];
    log("No artboard selected, selecting first artboard in document");
  }

  while(targetArtboard.parentGroup() != [doc currentPage]) {
    targetArtboard = targetArtboard.parentGroup();
  }

  return targetArtboard;
}

var _getCurrentView = function(doc) {
  if (doc.currentView) {
    return doc.currentView();
  } else if (doc.contentDrawView) {
    return doc.contentDrawView();
  }
  log("ERROR: Can not get currentView");
  return null;
}

var scrollToTop = function(context) {
  var targetArtboard = _getCurrentArtboard(context);
  var doc = context.document;

  var view = _getCurrentView(doc);
  var zoomValue = doc.zoomValue();
  var visibleContent = view.visibleContentRect();

  var originalWidth = visibleContent.size.width;
  var originalHeight = visibleContent.size.height;
  var originalX = visibleContent.origin.x;
  var originalY = visibleContent.origin.y;

  var targetRect = targetArtboard.rect();
  var centerX = targetRect.origin.x + (targetRect.size.width / 2);
  var centerY = targetRect.origin.y + (targetRect.size.height / 2);

  targetRect.size.width = originalWidth; 
  targetRect.size.height = originalHeight;

  targetRect.origin.x = centerX - (targetRect.size.width / 2);

  view.zoomToFitRect(targetRect);
}

var zoomTo75 = function(context) {

  var percent = 1.33;

  var targetArtboard = _getCurrentArtboard(context);
  var doc = context.document;

  var view = _getCurrentView(doc);
  var zoomValue = doc.zoomValue();
  var visibleContent = view.visibleContentRect();

  var originalWidth = visibleContent.size.width;
  var originalHeight = visibleContent.size.height;
  var originalX = visibleContent.origin.x;
  var originalY = visibleContent.origin.y;

  var targetRect = targetArtboard.rect();
  var centerX = targetRect.origin.x + (targetRect.size.width / 2);
  var centerY = targetRect.origin.y + (targetRect.size.height / 2);

  targetRect.size.width = (originalWidth * zoomValue) * percent;
  targetRect.size.height = (originalHeight * zoomValue) * percent;

  targetRect.origin.x = centerX - (targetRect.size.width / 2);
  targetRect.origin.y = originalY;
  view.zoomToFitRect(targetRect);
}


var about = function(context) {

  // Create the dialog
  var alert = COSAlertWindow.new();

  alert.setMessageText("zoomTools "+VERSION);
  alert.setInformativeText(
    "zoomTools plugin by Diego Iglesias. This is a very simple fork of the plugin ArtboardZoom by Mikko Tapionlinna \n"+
    "\n"+
    "Shortcuts:\n"+
      "\t\t⌘ ⌥ 3 = Scroll to top and center artboard on screen\n"+
      "\t\t⌘ ⌥ 4 = Zoom to artboard at 75% zoom\n"+
    "\n"+
    "Please report bugs at \n"+
    "https://github.com/diegoiglesias/zoomTools");
  alert.addButtonWithTitle("OK");

  var iconPath = context.plugin.urlForResourceNamed("ArtboardZoom.png").path();
  var icon = NSImage.alloc().initByReferencingFile(iconPath);
  alert.setIcon(icon);

  // Show dialog
  alert.runModal();
}